apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-kube-prometheus-prometheus
  namespace: prod
  annotations:
      cert-manager.io/cluster-issuer: letsencrypt-eyot
      # nginx.ingress.kubernetes.io/auth-realm: Authentication Required
      # nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth
      # nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization
      nginx.ingress.kubernetes.io/cors-allow-methods: GET,POST,OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: '*'
      nginx.ingress.kubernetes.io/cors-max-age: "7200"
      nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx 
  rules:
  - host: prometheus.xxxx.com
    http:
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: prometheus-kube-prometheus-prometheus
              port:
               number: 9090
  tls:
    - hosts:
        - prometheus.xxxx.com
      secretName: letsencrypt-eyot
