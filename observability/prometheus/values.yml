operator:
  enabled: true
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 500m
      memory: 1500Mi
  


prometheus:
  enableRemoteWriteReceiver: true
  enabled: true
  retention: 12h
  disableCompaction: true
  image:
    registry: docker.io
    repository: bitnami/prometheus
    tag: 2.47.0-debian-11-r0
    digest: ""
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 500m
      memory: 1500Mi

  # tolerations:
  #   - effect: NoSchedule
  #     key: owner
  #     operator: Equal
  #     value: red

  additionalScrapeConfigs:
    enabled: true
    type: internal
    internal:
      jobList:
        - job_name: prometheus
          static_configs:
            - targets:
                - localhost:9090
        - job_name: "toyeglobal"
          scrape_interval: 60s
          static_configs:
            - targets: ["toyeglobal-app.prod.svc.cluster.local:3000"]
        
        - job_name: "kubernetes-nodes-cadvisor"
          scrape_timeout: 60s
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
            - action: replace
              source_labels: [__meta_kubernetes_node_name]
              target_label: node
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_phase]
              regex: Pending|Succeeded|Failed
              action: drop
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: replace
              regex: (https?)
              target_label: __scheme__
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - action: labelmap
              regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - action: labeldrop
              regex: (app_kubernetes_io_.*|chart|component|pod_template.*|release|heritage|controller_.*|k8s_.*|managed_by|name|helm.*|kind)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_node_name]
              target_label: node
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: replace
              target_label: container

        - job_name: 'kubernetes-services'
          honor_labels: true
          metrics_path: /probe
          params:
            module: [http_2xx]
          kubernetes_sd_configs:
            - role: service
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
              action: keep
              regex: true
            - source_labels: [__address__]
              target_label: __param_target
            - target_label: __address__
              replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
            - source_labels: [__param_target]
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              target_label: service

        - job_name: "blackbox-kubernetes-ingresses"
          metrics_path: /probe
          params:
            module: [http_2xx]
          kubernetes_sd_configs:
            - role: ingress
          relabel_configs:
            - source_labels:
                [
                  __meta_kubernetes_ingress_scheme,
                  __address__,
                  __meta_kubernetes_ingress_path,
                ]
              regex: (.+);(.+);(.+)
              replacement: '${1}://${2}${3}'
              target_label: __param_target
            - target_label: __address__
              replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
            - source_labels: [__param_target]
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_ingress_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_ingress_name]
              target_label: ingress_name

        - job_name: 'blackbox-external-targets'
          metrics_path: /probe
          params:
            module: [http_2xx]
          static_configs:
            - targets:
                - blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115

        - job_name: "blackbox-kubernetes-pods"
          metrics_path: /probe
          params:
            module: [http_2xx]
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          # Example relabel to scrape only pods that have
          # "example.io/should_be_scraped = true" annotation.
          #  - source_labels: [__meta_kubernetes_pod_annotation_example_io_should_be_scraped]
          #    action: keep
          #    regex: true
            - source_labels: [__address__]
              target_label: __param_target
            - target_label: __address__
              replacement:  blackbox-exporter-prometheus-blackbox-exporter.monitoring.svc.cluster.local:9115
            - source_labels: [__param_target]
              replacement: ${1}/health
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: kubernetes_pod_name



        - job_name: 'kubernetes-service-endpoints'
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
              action: drop
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node


        - job_name: "kubernetes-pods"
          honor_labels: true
          scrape_timeout: 60s
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
              action: drop
              regex: true
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: drop
              regex: cloudsql-proxy
            # Drop linkerd sidecar series from this job
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: drop
              regex: linkerd.*
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: replace
              regex: (https?)
              target_label: __scheme__
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
              action: replace
              regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
              replacement: '[$2]:$1'
              target_label: __address__
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]
              action: replace
              regex: (\d+);((([0-9]+?)(\.|$)){4})
              replacement: $2:$1
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_app_kubernetes_io_(.+)
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_phase]
              regex: Pending|Succeeded|Failed|Completed
              action: drop
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: replace
              target_label: container
          metric_relabel_configs:
          # set node label to pod_node_name if it hasn't been provided by target
          - action: replace
            source_labels: [node, __meta_kubernetes_pod_node_name]
            regex: ;(.*)
            target_label: node
          - action: labeldrop
            regex: (app_kubernetes_io_|pod_template|controller_|k8s_|helm|linkerd_).*
          - action: labeldrop
            regex: chart|component|release|heritage|managed_by|owner|kind|mountpoint|id|name|container_id|uid|pod_ip|interface|instance|created_by_name|owner_name


  service:
    type: ClusterIP
    port: 9090
    targetPort: 9090
    clusterIP: ""
    nodePorts:
      http: ""

  ingress:
    enabled: true


  scrapeInterval: "5m"
  evaluationInterval: ""

  replicaCount: 2
  persistence:
    enabled: true
    storageClass: "prometheus-storage"
    accessModes:
      - ReadWriteOnce
    size: 30Gi
    annotations: {}


alertmanager:
  enabled: false

exporters:
  node-exporter:
    enabled: true
  kube-state-metrics:
    enabled: true


blackboxExporter:
  enabled: true

rbac:
  create: true
  pspEnabled: false

grafana:
  enabled: false




