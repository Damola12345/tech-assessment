name: Docker Image CI

on:
  push:
    # branches: [ ft/task3 ]
  # Uncomment the following lines if you want to run the workflow on pull requests to the main branch and tag pushes
  # pull_request:
  #   branches: [ main ]
  # tags:
  #   - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./toyeglobal-app

      - name: Run tests
        run: npm test
        working-directory: ./toyeglobal-app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./toyeglobal-app
          file: ./toyeglobal-app/Dockerfile
          push: true
          tags: damola12345/toyeglobal-app:latest
          platforms: linux/amd64

      - name: Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations,quickview
          only-severities: critical,high

  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Login to DockerHub
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    - name: Download kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        mv kubectl /usr/local/bin/

    - name: Set up kubectl
      run: echo "${{ secrets.KUBECONFIG }}" > .kubeconfig
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    - name: Print directory structure for debugging
      run: |
        echo "Printing directory structure:"
        ls -la
        ls -la toyeglobal-app
        ls -la toyeglobal-app/k8s
        ls -la toyeglobal-app/k8s/prod

    - name: Replace image URL in deployment manifests
      run: |
        export IMAGE_TAG=$(git rev-parse --short HEAD)-$(date +%F-%H-%M)
        export IMG_NAME="${{ secrets.DOCKERHUB_REPO }}/toyeglobal:${IMAGE_TAG}"
        sed -i "s|##IMAGE_URL##|${IMG_NAME}|" toyeglobal-app/k8s/prod/deployments/*.yaml

    - name: Apply Kubernetes manifests
      run: |
        for directory in ingresses services deployments
        do
          if [ $(ls -1 toyeglobal-app/k8s/prod/$directory/*.yaml 2>/dev/null | wc -l) != 0 ]
          then
            kubectl apply -f toyeglobal-app/k8s/prod/$directory -n prod
          fi
        done

    - name: Wait for deployment to complete
      run: |
        kubectl -n prod rollout status deployment toyeglobal-app-prod -w --timeout=5m


