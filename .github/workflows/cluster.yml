# name: k8s-deploy
# on:
#   push:
#     branches: 
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to DockerHub
#         uses: docker/login-action@v2 
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           push: true
#           tags: damola12345/toyeglobal-app:latest
#           platforms: linux/amd64

#       - name: Docker Scout
#         uses: docker/scout-action@v1
#         with:
#           command: cves,recommendations,quickview
#           only-severities: critical,high

#   cluster_deploy:
#     needs: build
#     # if: ${{ github.event.inputs.deploy_confirmation == 'yes' && github.ref == 'refs/heads/production' }}.
#     runs-on: ubuntu-latest
#     steps:     
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#           aws-region: us-east-1

#       - name: Login to DockerHub
#         uses: docker/login-action@v2 
#         with:
#             username: ${{ secrets.DOCKER_USERNAME }}
#             password: ${{ secrets.DOCKER_PASSWORD }}

#       - uses: actions/checkout@v2
#       - name: Deploy to Cluster
#         env: 
#           DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
#           DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
#           DOCKERHUB_REPO: damola12345
#           APP_NAME: toyeglobal
#           KUBECONFIG: ${{ secrets.KUBECONFIG}}

#           BRANCH: "master"
#           ENVIRONMENT: prod

#         run: | 
#            /bin/bash deploy.sh  
           